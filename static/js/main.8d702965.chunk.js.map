{"version":3,"sources":["reducers/projects.ts","reducers/index.ts","components/Projects/projects/styles.ts","api/index.js","components/Projects/projects/project.tsx","actions/projects.ts","components/Projects/styles.ts","components/Single/Single.tsx","components/Projects/Projects.tsx","components/Form/styles.ts","components/Form/Form.tsx","styles.ts","components/Home/Home.tsx","components/Nav/Nav.tsx","App.tsx","index.js"],"names":["Projects","projects","action","type","payload","map","project","_id","filter","combineReducers","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","padding","title","cardActions","url","editProject","id","editedProject","axios","patch","deleteProject","delete","likeProject","Project","props","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","onClick","setSelectProjectId","image","featuredImage","Typography","variant","Date","createdAt","toLocaleDateString","Button","style","size","setCurrentId","fontSize","Box","sx","my","tags","tag","Chip","mx","label","component","gutterBottom","creator","description","CardContent","message","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Single","selectedProject","useSelector","state","selectedProjectId","find","p","Container","mt","Grid","container","mb","item","xs","sm","src","maxHeight","maxWidth","width","dangerouslySetInnerHTML","__html","sanitizedHtml","useState","selectProjectId","length","px","cursor","CircularProgress","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","base64","setBase64","imagePreview","setImagePreview","curProject","currentId","useEffect","setProjectData","defaultEmptyProject","content","projectData","_handleReaderLoaded","readerEvt","binaryString","target","result","btoa","clear","autoComplete","noValidate","onSubmit","e","preventDefault","newProject","post","createProject","onChange","files","file","reader","FileReader","onload","readAsBinaryString","TextField","name","fullWidth","value","multiline","rows","split","accept","undefined","onloadend","readAsDataURL","appBar","heading","marginLeft","Home","href","withRouter","flexGrow","AppBar","Toolbar","Link","to","textDecoration","m","App","get","path","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d702965.chunk.js","sourcesContent":["const Projects = (projects = [], action: any) => {\n    switch (action.type) {\n        case \"FETCH_ALL\":\n            return action.payload;\n        case \"LIKE\":\n        case \"UPDATE\":\n            return projects.map((project) =>\n                (project as any)._id === action.payload._id\n                    ? action.payload\n                    : project\n            );\n        case \"DELETE\":\n            return projects.filter(\n                (project) => (project as any)._id !== action.payload\n            );\n        case \"CREATE\":\n            return [...projects, action.payload];\n\n        default:\n            return projects;\n    }\n};\nexport default Projects;\n","import { combineReducers } from \"redux\";\nimport projects from \"./projects\";\nexport default combineReducers({\n    projects,\n});\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        backgroundBlendMode: \"darken\",\n    },\n    border: {\n        border: \"solid\",\n    },\n    fullHeightCard: {\n        height: \"100%\",\n    },\n    card: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        borderRadius: \"15px\",\n        height: \"100%\",\n        position: \"relative\",\n    },\n    overlay: {\n        position: \"absolute\",\n        top: \"20px\",\n        left: \"20px\",\n        color: \"white\",\n    },\n    overlay2: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        color: \"white\",\n    },\n    grid: {\n        display: \"flex\",\n    },\n    details: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        margin: \"10px\",\n        padding: \"0 16px\",\n    },\n    title: {\n        padding: \"0 16px\",\n    },\n    cardActions: {\n        padding: \"0 16px 8px 16px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n});\n","import axios from \"axios\";\n\nconst url = \"https://cisc275-rewind.herokuapp.com/projects\";\n\nexport const fetchProjects = () => axios.get(url);\nexport const createProject = (newProject) => axios.post(url, newProject);\nexport const editProject = (id, editedProject) =>\n    axios.patch(`${url}/${id}`, editedProject);\nexport const deleteProject = (id) => axios.delete(`${url}/${id}`);\nexport const likeProject = (id) => axios.patch(`${url}/${id}/likeproject`);\n","import useStyles from \"./styles\";\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Button,\n    Typography,\n    Chip,\n    Box,\n} from \"@mui/material\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteProject, likeProject } from \"../../../actions/projects\";\ntype ProjectProps = {\n    project: any;\n    setCurrentId: (id: number) => void;\n    setSelectProjectId: (id: number) => void;\n};\nconst Project = (props: ProjectProps) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    return (\n        <Card className={classes.card}>\n            <CardMedia\n                onClick={() => {\n                    props.setSelectProjectId(props.project._id);\n                }}\n                className={classes.media}\n                image={\n                    props.project.featuredImage\n                        ? `data:image/png;base64, ${props.project.featuredImage}`\n                        : \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n                }\n                title={props.project.title}\n            />\n            <div\n                className={classes.overlay}\n                onClick={() => {\n                    props.setSelectProjectId(props.project._id);\n                }}\n            >\n                <Typography variant=\"body2\">\n                    {\"Date Added: \"}\n                    {new Date(props.project.createdAt).toLocaleDateString()}\n                </Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button\n                    style={{ color: \"white\" }}\n                    size=\"small\"\n                    onClick={() => {\n                        props.setCurrentId(props.project._id);\n                    }}\n                >\n                    <MoreHorizIcon fontSize=\"medium\" />\n                </Button>\n            </div>\n            <Box className={classes.title} sx={{ my: 1 }}>\n                {props.project.tags.map((tag: string) => (\n                    <Chip color=\"secondary\" sx={{ mx: 1 }} label={`${tag} `} />\n                ))}\n            </Box>\n            <Typography\n                className={classes.title}\n                variant=\"h4\"\n                component=\"h2\"\n                onClick={() => {\n                    props.setSelectProjectId(props.project._id);\n                }}\n            >\n                {props.project.title}\n            </Typography>\n            <Typography\n                className={classes.title}\n                gutterBottom\n                variant=\"h6\"\n                component=\"h2\"\n                color=\"textSecondary\"\n            >\n                {\"Created by: \"}\n                {props.project.creator}\n            </Typography>\n            <Typography\n                className={classes.details}\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n                component=\"p\"\n                onClick={() => {\n                    props.setSelectProjectId(props.project._id);\n                }}\n            >\n                {props.project.description}\n            </Typography>\n            <CardContent>\n                <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                    onClick={() => {\n                        props.setSelectProjectId(props.project._id);\n                    }}\n                >\n                    {props.project.message}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => {\n                        dispatch(likeProject(props.project._id));\n                    }}\n                >\n                    <ThumbUpAltIcon fontSize=\"small\" /> Like{\" \"}\n                    {props.project.likeCount}{\" \"}\n                </Button>\n                <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={() => {\n                        dispatch(deleteProject(props.project._id));\n                    }}\n                >\n                    <DeleteIcon fontSize=\"small\" /> Delete\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\nexport default Project;\n","import * as api from \"../api\";\n//Action Creators - functions that return actions\nexport const getProjects =\n    () => async (dispatch: (action: { type: any; payload: any }) => any) => {\n        try {\n            const { data } = await api.fetchProjects();\n            // console.log(\"Here\" + JSON.stringify(data));\n            const action = { type: \"FETCH_ALL\", payload: data };\n            dispatch(action);\n        } catch (error) {\n            console.log((error as any).message);\n        }\n    };\n\nexport const createProject =\n    (project: any) =>\n    async (dispatch: (action: { type: any; payload: any }) => any) => {\n        try {\n            const { data } = await api.createProject(project);\n            console.log(data);\n            dispatch({ type: \"CREATE\", payload: data });\n        } catch (error) {\n            console.log(error);\n        }\n    };\nexport const editProject =\n    (id: number, project: any) =>\n    async (dispatch: (action: { type: any; payload: any }) => any) => {\n        try {\n            const { data } = await api.editProject(id, project);\n            dispatch({ type: \"UPDATE\", payload: data });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\nexport const deleteProject =\n    (id: number) =>\n    async (dispatch: (action: { type: any; payload: any }) => any) => {\n        try {\n            await api.deleteProject(id);\n            dispatch({ type: \"DELETE\", payload: id });\n        } catch (error) {\n            console.log(error);\n        }\n    };\nexport const likeProject =\n    (id: number) =>\n    async (dispatch: (action: { type: any; payload: any }) => any) => {\n        try {\n            const { data } = await api.likeProject(id);\n            dispatch({ type: \"LIKE\", payload: data });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n    mainContainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    smMargin: {\n        margin: theme.spacing(1),\n    },\n    actionDiv: {\n        textAlign: \"center\",\n    },\n}));\n","import {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Paper,\n    Chip,\n    Typography,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\n\ntype SingleProps = {\n    selectedProjectId: number | null;\n    setSelectProjectId: (id: number | null) => void;\n};\n\nconst Single = (props: SingleProps) => {\n    const selectedProject = useSelector((state) =>\n        props.selectedProjectId\n            ? (state as any).projects.find(\n                  (p: any) => p._id === props.selectedProjectId\n              )\n            : null\n    );\n    return (\n        <Container>\n            <Button\n                sx={{ mt: 2, fontSize: \"20px\" }}\n                onClick={() => props.setSelectProjectId(null)}\n            >\n                {\"❬ Go Back\"}\n            </Button>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"stretch\"\n                spacing={3}\n                sx={{ mb: 2 }}\n            >\n                <Grid item xs={12} sm={6}>\n                    <img\n                        src={\n                            selectedProject.featuredImage\n                                ? `data:image/png;base64, ${selectedProject.featuredImage}`\n                                : \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n                        }\n                        style={{\n                            maxHeight: \"350px\",\n                            maxWidth: \"350px\",\n                            height: \"auto\",\n                            width: \"auto\",\n                        }}\n                    />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Box my={4} display=\"flex\">\n                        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                            {selectedProject.title}\n                        </Typography>\n                    </Box>\n                    {selectedProject.tags.map((tag: string) => (\n                        <Chip\n                            color=\"secondary\"\n                            sx={{ mx: 1 }}\n                            label={`${tag} `}\n                        />\n                    ))}\n                </Grid>\n            </Grid>\n            <hr />\n\n            <Box>\n                <Typography\n                    dangerouslySetInnerHTML={{\n                        __html: selectedProject.sanitizedHtml,\n                    }}\n                ></Typography>\n            </Box>\n        </Container>\n    );\n};\nexport default Single;\n","import Project from \"./projects/project\";\nimport useStyles from \"./styles\";\nimport { useSelector } from \"react-redux\";\nimport { Box, CircularProgress, Grid, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Single from \"../Single/Single\";\n\ntype ProjectsTypes = {\n    setCurrentId: (id: number) => void;\n};\n\nconst Projects = (props: ProjectsTypes) => {\n    const projects = useSelector((state) => (state as any).projects);\n    const [selectProjectId, setSelectProjectId] = useState<number | null>(null);\n    console.log(projects);\n    const classes = useStyles();\n    return !projects.length ? (\n        <CircularProgress />\n    ) : selectProjectId ? (\n        <Single\n            setSelectProjectId={setSelectProjectId}\n            selectedProjectId={selectProjectId}\n        ></Single>\n    ) : (\n        <>\n            <Box my={4} display=\"flex\" justifyContent=\"center\">\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Projects\n                </Typography>\n            </Box>\n            <Grid\n                className={classes.mainContainer}\n                container\n                alignItems=\"stretch\"\n                spacing={3}\n                sx={{ px: 3 }}\n            >\n                {console.log(\"LENGTH\", projects.length)}\n\n                {projects.map((project: any) => (\n                    <Grid\n                        item\n                        key={project._id}\n                        xs={12}\n                        sm={6}\n                        sx={{ cursor: \"pointer\" }}\n                    >\n                        {console.log(project)}\n                        <Project\n                            setSelectProjectId={setSelectProjectId}\n                            project={project}\n                            setCurrentId={props.setCurrentId}\n                        ></Project>\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n};\nexport default Projects;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n    root: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n    },\n    fileInput: {\n        width: \"97%\",\n        margin: \"10px 0\",\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n}));\n","import useStyles from \"./styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createProject, editProject } from \"../../actions/projects\";\nimport { NonNullExpression } from \"typescript\";\ntype FormProps = {\n    setCurrentId: (id: number | null) => void;\n    currentId: number | null;\n};\n\nconst Form = (props: FormProps) => {\n    const classes = useStyles();\n    const [base64, setBase64] = useState<string>(\"\");\n    const [imagePreview, setImagePreview] = useState<any>(\"\");\n    const dispatch = useDispatch();\n    const curProject = useSelector((state) =>\n        props.currentId\n            ? (state as any).projects.find(\n                  (p: any) => p._id === props.currentId\n              )\n            : null\n    );\n\n    useEffect(() => {\n        if (curProject) setProjectData(curProject);\n    }, [curProject]);\n    const defaultEmptyProject = {\n        creator: \"\",\n        title: \"\",\n        content: \"\",\n        tags: [\"\"],\n        featuredImage: \"\",\n        description: \"\",\n    };\n    const [projectData, setProjectData] = useState(defaultEmptyProject);\n\n    const onChange = (e: any) => {\n        if (e.target.files) {\n            let file = e.target.files[0];\n            if (file) {\n                console.log(\"file\", e.target.files[0]);\n                const reader = new FileReader();\n                reader.onload = _handleReaderLoaded;\n                reader.readAsBinaryString(file);\n            }\n        }\n    };\n\n    const _handleReaderLoaded = (readerEvt: any) => {\n        let binaryString = readerEvt.target.result;\n        setBase64(btoa(binaryString));\n        console.log(\"bine\", base64);\n    };\n\n    const onFileSubmit = (e: any) => {\n        e.preventDefault();\n        console.log(\"bine\", base64);\n        let payload = { image: base64 };\n        setProjectData({ ...projectData, featuredImage: base64 });\n        console.log(\"payload\", payload);\n        if (props.currentId != null) {\n            dispatch(\n                editProject(props.currentId, {\n                    ...projectData,\n                    featuredImage: base64,\n                })\n            );\n        } else {\n            dispatch(\n                createProject({\n                    ...projectData,\n                    featuredImage: base64,\n                })\n            );\n        }\n        clear();\n    };\n    //https://github.com/GuScarpim/upload-image-react-base64/blob/main/front/src/pages/Upload.tsx\n    const photoUpload = (e: any) => {\n        e.preventDefault();\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        console.log(\"reader\", reader);\n        console.log(\"file\", file);\n        if (reader !== undefined && file !== undefined) {\n            reader.onloadend = () => {\n                // setFile(file);\n                // setSize(file.size);\n                // setName(file.name);\n                setImagePreview(reader.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const clear = () => {\n        props.setCurrentId(null);\n        setProjectData(defaultEmptyProject);\n    };\n\n    return (\n        <div className={classes.paper}>\n            <form\n                autoComplete=\"off\"\n                noValidate\n                className={classes.form}\n                onSubmit={onFileSubmit}\n                onChange={(e) => onChange(e)}\n                action=\"/projects\"\n            >\n                <Typography variant=\"h6\">\n                    {`${props.currentId === null ? \"Create a \" : \"Edit \"}`}\n                    Project\n                </Typography>\n                <TextField\n                    name=\"creator\"\n                    variant=\"outlined\"\n                    label=\"Creator\"\n                    fullWidth\n                    value={projectData.creator}\n                    onChange={(e) => {\n                        setProjectData({\n                            ...projectData,\n                            creator: e.target.value,\n                        });\n                    }}\n                />\n                <TextField\n                    name=\"title\"\n                    variant=\"outlined\"\n                    label=\"Title\"\n                    fullWidth\n                    value={projectData.title}\n                    onChange={(e) => {\n                        setProjectData({\n                            ...projectData,\n                            title: e.target.value,\n                        });\n                    }}\n                />\n\n                <TextField\n                    name=\"description\"\n                    variant=\"outlined\"\n                    label=\"Short description\"\n                    fullWidth\n                    multiline\n                    rows={3}\n                    value={projectData.description}\n                    onChange={(e) => {\n                        setProjectData({\n                            ...projectData,\n                            description: e.target.value,\n                        });\n                    }}\n                />\n\n                <TextField\n                    name=\"content\"\n                    variant=\"outlined\"\n                    label=\"Content (use Markdown)\"\n                    fullWidth\n                    multiline\n                    rows={7}\n                    value={projectData.content}\n                    onChange={(e) => {\n                        setProjectData({\n                            ...projectData,\n                            content: e.target.value,\n                        });\n                    }}\n                />\n                <TextField\n                    name=\"tags\"\n                    variant=\"outlined\"\n                    label=\"Tags (separate with commas) \"\n                    fullWidth\n                    value={projectData.tags}\n                    onChange={(e) => {\n                        setProjectData({\n                            ...projectData,\n                            tags: e.target.value.split(\",\"),\n                        });\n                    }}\n                />\n                <div className={classes.fileInput}>\n                    {\"Upload featured screenshot \"}\n                    <input\n                        type=\"file\"\n                        name=\"featuredImage\"\n                        id=\"featuredImage\"\n                        accept=\".jpeg, .png, .jpg\"\n                        onChange={photoUpload}\n                        src={imagePreview}\n                    />\n                </div>\n                <Button\n                    className={classes.buttonSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    fullWidth\n                >\n                    Submit\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={clear}\n                    fullWidth\n                >\n                    Clear\n                </Button>\n            </form>\n        </div>\n    );\n};\nexport default Form;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n    appBar: {\n        borderRadius: 15,\n        margin: \"30px 0\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    heading: {\n        color: \"rgba(0,183,255, 1)\",\n    },\n    image: {\n        marginLeft: \"15px\",\n    },\n}));\n","import { Container, Typography, Button } from \"@mui/material\";\nimport Nav from \"../Nav/Nav\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Container>\n                <Typography sx={{ mb: 2, mt: 2 }} variant=\"h2\" component=\"h1\">\n                    CISC275: Rewind\n                </Typography>\n\n                <Typography sx={{ mb: 3 }}>\n                    This is a simple website{\" \"}\n                    <span>\n                        <a href=\"/\">(Github link)</a>\n                    </span>{\" \"}\n                    that showcases projects of students in Dr. Bart's CISC275\n                    class on web development!\n                </Typography>\n                <Typography sx={{ mb: 1 }} variant=\"h4\">\n                    Current Students\n                </Typography>\n                <Button component=\"a\" href=\"add-project\">\n                    Add Your Project\n                </Button>\n            </Container>\n        </div>\n    );\n};\n\nexport default Home;\n","import AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Link, withRouter } from \"react-router-dom\";\nconst Nav = () => {\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography\n                        variant=\"h6\"\n                        component={Link}\n                        to=\"/\"\n                        sx={{\n                            flexGrow: 1,\n                            textDecoration: \"none\",\n                            color: \"white\",\n                        }}\n                    >\n                        CISC275: Rewind\n                    </Typography>\n                    <Button\n                        component={Link}\n                        to=\"/projects\"\n                        color=\"inherit\"\n                        sx={{ m: 1 }}\n                    >\n                        View Projects\n                    </Button>\n                    <Button\n                        component={Link}\n                        to=\"/add-project\"\n                        color=\"error\"\n                        sx={{ m: 1 }}\n                        variant=\"contained\"\n                    >\n                        {\n                            //'\"inherit\" | \"primary\" | \"secondary\" | \"success\" | \"error\" | \"info\" | \"warning\" | undefined'.\n                        }\n                        Add Project\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n};\n\nexport default withRouter(Nav);\n","import { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport Projects from \"./components/Projects/Projects\";\nimport Form from \"./components/Form/Form\";\nimport { getProjects } from \"./actions/projects\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport Home from \"./components/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Nav from \"./components/Nav/Nav\";\n\nconst App = () => {\n    const classes = useStyles();\n    const [currentId, setCurrentId] = useState<number | null>(null);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getProjects());\n    }, [currentId, dispatch]);\n\n    //Testing purposes\n    return (\n        <Router>\n            <div>\n                <Nav />\n\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/projects\">\n                        <Projects setCurrentId={setCurrentId} />\n                    </Route>\n                    <Route path=\"/add-project\">\n                        <Form\n                            currentId={currentId}\n                            setCurrentId={setCurrentId}\n                        />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n\n    /*\n    return (\n        <Container maxWidth=\"lg\">\n            <AppBar\n                position=\"static\"\n                className={classes.appBar}\n                color=\"inherit\"\n            >\n                <Typography\n                    variant=\"h2\"\n                    className={classes.heading}\n                    align=\"center\"\n                >\n                    CISC275 Rewind\n                    {\n                        //insert img className = {classes.image}\n                    }\n                </Typography>\n            </AppBar>\n\n            <Grow in>\n                <Container>\n                    <Grid\n                        container\n                        justifyContent=\"space-between\"\n                        alignItems=\"stretch\"\n                        spacing={3}\n                    >\n                        <Grid item xs={12} sm={7}>\n                            <Projects setCurrentId={setCurrentId} />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form\n                                currentId={currentId}\n                                setCurrentId={setCurrentId}\n                            />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    );\n    */\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nimport App from \"./App\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}